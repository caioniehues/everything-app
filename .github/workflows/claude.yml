name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Custom prompt with project context
          prompt: |
            You've been mentioned in a GitHub comment for the Everything App project.

            Before responding, read CLAUDE.md for project context, including:
            - BMAD workflow and story-driven development
            - TDD requirements (80% backend, 70% frontend coverage)
            - No TODO/FIXME policy
            - Clean architecture principles

            Context about virtual team roles:
            - Sarah (PO): Product decisions, story prioritization
            - Winston (Architect): Technical design, architecture
            - Ruby (Backend): Spring Boot, Java, API development
            - Sally (UX): UI/UX design, user experience

            Common tasks you might be asked to help with:
            - Implement a story from /docs/stories/
            - Review code for quality and standards
            - Update documentation
            - Fix failing tests
            - Explain architecture decisions
            - Generate test cases

            Always:
            - Reference relevant stories
            - Follow TDD approach
            - Update documentation
            - Maintain test coverage

            The user's request is in the comment that tagged you. Respond appropriately.

          # Enhanced tool permissions for comprehensive assistance
          claude_args: '--allowed-tools "Bash(gh:*),Bash(git:*),Bash(mvn:*),Bash(flutter:*),Bash(docker:*),Bash(date:*)"'

